add class
**********

import React, { useState } from "react";
import { Button, Form, Input, message } from "antd";
import axios from "axios";

const layout = {
  labelCol: { span: 8 },
  wrapperCol: { span: 16 },
};

/* eslint-disable no-template-curly-in-string */
const validateMessages = {
  required: "${label} is required!",
  types: {
    number: "${label} is not a valid number!",
  },
};
/* eslint-enable no-template-curly-in-string */

export default function AddClass() {
  const [messageApi, contextHolder] = message.useMessage();

  const [form] = Form.useForm();
  const [formData, setFormData] = useState({});

  const onFinish = async (values) => {
    try {
      await submitForm(values);
      console.log(values);
      messageApi.success("Class added successfully!");
      form.resetFields();
    } catch (error) {
      messageApi.error("Error adding Class.");
      console.error(error);
    }
  };

  const submitForm = async (values) => {
    try {
      const response = await axios.post("https://localhost:44332/api/Class",values);
      console.log(response.data);
      return response.data;
    } catch (error) {
      console.error(error);
      throw error;
    }
  };

  return (
    React.createElement("div", null,
      contextHolder,
      React.createElement(Form, {
          layout: layout,
          name: "nest-messages",
          onFinish: onFinish,
          style: { maxWidth: 600, margin: "auto" },
          validateMessages: validateMessages
        },
        React.createElement(Form.Item, {
          name: ["ClassName"],
          label: "ClassName",
          rules: [{ required: true }]
        },
        React.createElement(Input, null)),
        React.createElement(Form.Item, {
          name: ["BasicPay"],
          label: "BasicPay",
          rules: [{ required: true }]
        },
        React.createElement(Input, null)),
        React.createElement(Form.Item, {
          name: ["Salary"],
          label: "Salary",
          rules: [{ required: true }]
        },
        React.createElement(Input, null)),
        React.createElement(Form.Item, {
          name: ["TravelAllowance"],
          label: "TravelAllowance"
        },
        React.createElement(Input, null)),
        React.createElement(Form.Item, {
          name: ["ShiftAllowance"],
          label: "ShiftAllowance"
        },
        React.createElement(Input, null)),
        React.createElement(Form.Item, {
          name: ["MedicalAllowance"],
          label: "MedicalAllowance"
        },
        React.createElement(Input, null)),
        React.createElement(Form.Item, {
          wrapperCol: { ...layout.wrapperCol, offset: 8 }
        },
        React.createElement(Button, {
            type: "primary",
            htmlType: "submit"
          },
          "ADD Class"
        ))
      ),
      React.createElement("div", {
          style: {
            display: "flex",
            flexDirection: "column",
            alignItems: "center"
          }
        },
        React.createElement("h3", null, "Class Added"),
        React.createElement("table", {
            style: { width: "500px", height: "70px" }
          },
            React.createElement("tr", 
            React.createElement("th", ),
            React.createElement("th", null, "Class"),
            React.createElement("th", null, "Basic Pay"),
            React.createElement("th", null, "Salary"),
            React.createElement("th", null, "T_All"),
            React.createElement("th", null, "M_All"),
            React.createElement("th", null, "W_All")),
            React.createElement("tr", null,
            React.createElement("td", null, "Delete"),
            React.createElement("td", null, "Class 1"),
            React.createElement("td", null, "5000"),
            React.createElement("td", null, "40000"),
            React.createElement("td", null, "1000"),
            React.createElement("td", null, "1000"),
            React.createElement("td", null, "1000")
            )
            )
            )
            )
            )
            }
